apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "postgresql-12.fullname" . }}
  labels:
    {{- include "postgresql-12.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "postgresql-12.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "postgresql-12.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "postgresql-12.selectorLabels" . | nindent 8 }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      containers:
        - name: postgresql
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: postgresql
              containerPort: {{ .Values.postgresql.port }}
              protocol: TCP
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.database | quote }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "postgresql-12.fullname" . }}-creds
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "postgresql-12.fullname" . }}-creds
                  key: password
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
            {{- if .Values.postgresql.initdbScripts }}
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgresql.username }}
                - -h
                - 127.0.0.1
                - -p
                - {{ .Values.postgresql.port | quote }}
            {{- toYaml .Values.probes.liveness | nindent 12 }}
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgresql.username }}
                - -h
                - 127.0.0.1
                - -p
                - {{ .Values.postgresql.port | quote }}
            {{- toYaml .Values.probes.readiness | nindent 12 }}
      {{- if .Values.postgresql.initdbScripts }}
      initContainers:
        - name: init-scripts
          image: busybox
          command: ['sh', '-c', 'cp /scripts/* /target']
          volumeMounts:
            - name: init-scripts
              mountPath: /scripts
              readOnly: true
            - name: target-scripts
              mountPath: /target
      {{- end }}
      volumes:
        {{- if .Values.postgresql.initdbScripts }}
        - name: init-scripts
          configMap:
            name: {{ include "postgresql-12.fullname" . }}-init-scripts
        - name: target-scripts
          emptyDir: {}
        {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: {{ .Values.persistence.accessModes }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass }}
        {{- end }}